@model OrderVM

@{
    ViewData["Title"] = "Index";

    var status = Context.Request.Query["status"];
    var pending = "";
    var inprocess = "";
    var completed = "";
    var approved = "";
     var all = "";

    switch (status)
    {
        case "pending":
            pending = "active text-white bg-primary";
            break;
        case "inprocess":
            inprocess = "active text-white bg-primary";
            break;
        case "completed":
            completed = "active text-white bg-primary";
            break;
        case "approved":
            approved = "active text-white bg-primary";
            break;
        default:
            all = "active text-white bg-primary";
            break;

    }
}

<h1>Index</h1>

<p>
    <a asp-action="">Create New</a>
</p>
<div class="d-flex justify-content-between pb-5 pt-2">
    <span></span>
    <ul class="list-group list-group-horizontal-sm">
        <a style="text-decoration:none;" asp-controller="Order" asp-action="Index" asp-route-status="inprocess">
        <li class="list-group-item @inprocess">In Process</li>
        </a>
        <a style="text-decoration:none;" asp-controller="Order" asp-action="Index" asp-route-status="pending">
        <li class="list-group-item @pending">Payment Pending</li>
        </a>
        <a style="text-decoration:none;" asp-controller="Order" asp-action="Index" asp-route-status="completed">
        <li class="list-group-item @completed">Completed</li>
        </a>
        <a style="text-decoration:none;" asp-controller="Order" asp-action="Index" asp-route-status="approved">
        <li class="list-group-item @approved">Approved</li>
        </a>
        <a style="text-decoration:none;" asp-controller="Order" asp-action="Index" asp-route-status="all">
        <li class="list-group-item @all">All</li>
        </a>
    </ul>
</div>
<table  class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderHeader.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderHeader.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderHeader.First().PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderHeader.First().ApplicationUser.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderHeader.First().OrderStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderHeader.First().OrderTotal)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderHeader)
        {
            <tr>
                <td>
                     @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderTotal)
                </td>
                <td>
                    <a asp-action="" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@* @section Scripts {
    <script src="~/js/product.js"></script>
} *@
